user www-data;

events {
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	server_tokens off; # to hide the version of the server

	# gzip settings to ameliorate the speed of the website
	gzip on;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	# settings for the servers to ameliorate the speed of the website
	sendfile on;
	tcp_nopush on; # to send the data as soon as possible
	tcp_nodelay on; # to send the data in packets as soon as possible
	keepalive_timeout 300s; # to keep the connection alive for 300 seconds

	server {
		# port listen by the server
		listen 80;
		listen [::]:80;

		server_name localhost;
		return 301 https://$host$request_uri; # Redirect all HTTP traffic to HTTPS for the user security and experience

		# in production django does not collect static files 
		  # Serve static files
	}

	server {
		# port listen by the server
		listen 443 ssl;
		listen [::]:443 ssl;

		# SSL settings with ssl cert and key and protocols
		ssl_certificate /run/secrets/ssl_certificate;
		ssl_certificate_key /run/secrets/ssl_certificate_key;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers on;
		ssl_session_timeout 10m;

		# path where the frontend is located
		root /usr/share/nginx/html;
		server_name localhost;
		index index.php index.html index.htm;

		# security headers to protect the website
		add_header X-Frame-Options "SAMEORIGIN" always; # to prevent clickjacking
		add_header X-XSS-Protection "1; mode=block" always; # to prevent XSS attacks
		add_header X-Content-Type-Options "nosniff" always; # to prevent MIME type sniffing
		add_header Referrer-Policy "no-referrer-when-downgrade" always; # to prevent the browser to send the referrer header to the website

		# Bloc for access to the frontend (cache) to uncomment for production to use the cache
		#location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
		#	expires 30d;
		#	access_log off;
		#}

#######static files
		location /static/ {
			alias srcs/requirements/backend/static;
			expires 30d; # Cache static files for 30 days
			access_log off; # Disable logging for static files
        }

        # Serve media files (if needed)
        location /media/ {
            alias srcs/requirements/backend/static/;
            expires 30d;
            access_log off;
        }


		# location access for SPA (frontend)
		location / {
			if ($request_method !~ ^(GET|HEAD|POST)$) {
				return 405;
			}
			try_files $uri $uri/ /index.html;
		}

		# Bloc for access to the API Django (backend)
		location /api/ {
			if ($request_method !~ ^(GET|HEAD|POST)$) {
				return 405;
			}

			# proxy pass settings for the backend to comment if use uwsgi
			proxy_pass http://backend:8000;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			# end of proxy pass settings


			# uwsgi settings for the backend to uncomment if use uwsgi
			#uwsgi_pass ***; # to complete by replacing *** by the address of the uwsgi server
			#include uwsgi_params;
			#uwsgi_param Host $host;
			#uwsgi_param X-Real-IP $remote_addr;
			#uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
			#uwsgi_param X-Forwarded-Proto $scheme;
			# end of uwsgi settings
		}
		

		location /is_logged_in/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /oauth/ {
            proxy_pass http://backend/oauth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth/user/ {
            proxy_pass http://backend/auth/user/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }



		#backend staff
		location /admin/ {
            proxy_pass http://backend/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ws/ {
            proxy_pass http://backend:8000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

		# Logs settings to follow the requests
		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;
	}
}
