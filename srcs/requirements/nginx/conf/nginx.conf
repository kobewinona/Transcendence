user www-data;

load_module modules/ngx_http_modsecurity_module.so;

events {
}

http {
	include /usr/local/nginx/conf/mime.types;
	default_type application/octet-stream;

	limit_conn_zone $binary_remote_addr zone=perip:10m;

	# Activate ModSecurity
    modsecurity off;
    modsecurity_rules_file /usr/local/nginx/conf/modsecurity.conf;

	server_tokens off; # to hide the version of the server

	# gzip settings to ameliorate the speed of the website
	gzip on;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	# settings for the servers to ameliorate the speed of the website
	sendfile on;
	tcp_nopush on; # to send the data as soon as possible
	tcp_nodelay on; # to send the data in packets as soon as possible
	keepalive_timeout 300s; # to keep the connection alive for 300 seconds

	server {
		# port listen by the server
		listen 80;
		listen [::]:80;

		server_name _;
		location / {
            return 301 https://$host$request_uri;
        }
	}

	server {
		# port listen by the server
		listen 443 ssl;
		listen [::]:443 ssl;

		client_max_body_size 20M;

		# SSL settings with ssl cert and key and protocols
		ssl_certificate /run/secrets/ssl_certificate;
		ssl_certificate_key /run/secrets/ssl_certificate_key;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers on;
		ssl_session_timeout 10m;

		# path where the frontend is located
		root /usr/share/nginx/html;
		server_name _;
		index index.php index.html index.htm;

		# security headers to protect the website
		add_header X-Frame-Options "SAMEORIGIN" always; # to prevent clickjacking
		add_header X-XSS-Protection "1; mode=block" always; # to prevent XSS attacks
		add_header X-Content-Type-Options "nosniff" always; # to prevent MIME type sniffing
		add_header Referrer-Policy "no-referrer-when-downgrade" always; # to prevent the browser to send the referrer header to the website
        add_header Content-Security-Policy "default-src 'self';
          script-src 'self' 'unsafe-eval';
          style-src 'self';
          img-src 'self' data: https://upload.wikimedia.org https://cdn.intra.42.fr;
          connect-src 'self' https://localhost wss://localhost https://api.intra.42.fr;" always;
        # https://cdn.intra.42.fr - is domain for users avatars

		# Bloc for access to the frontend (cache) to uncomment for production to use the cache
		#location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
		#	expires 30d;
		#	access_log off;
		#}

		location ~* \.(js|css|svg|woff|woff2|ttf|eot|ico|png|jpg|jpeg|gif)$ {
			modsecurity off;
		}

		location ~ /\. {
			deny all;
		}

		location / {
			try_files $uri $uri/ /index.html;
		}

		location /api/ {
            limit_except GET HEAD POST OPTIONS {
                deny all;
            }

            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        location /ws/ {
			modsecurity off;

			limit_conn perip 15;

            proxy_pass http://backend:8000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

		# Logs settings to follow the requests
		access_log /dev/stdout;
		error_log /dev/stderr;
	}
}
